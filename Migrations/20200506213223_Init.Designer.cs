// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SmartSchollAPI.Data;

namespace SmartSchollAPI.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20200506213223_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0");

            modelBuilder.Entity("SmartSchollAPI.Models.Aluno", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("DataFim")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("TEXT");

                    b.Property<int>("Matricula")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .HasColumnType("TEXT");

                    b.Property<string>("Sobrenome")
                        .HasColumnType("TEXT");

                    b.Property<string>("Telefone")
                        .HasColumnType("TEXT");

                    b.Property<bool>("isAtivo")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Alunos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DataInicio = new DateTime(2020, 5, 6, 18, 32, 22, 822, DateTimeKind.Local).AddTicks(6529),
                            DataNascimento = new DateTime(2005, 1, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Matricula = 1,
                            Nome = "Marta",
                            Sobrenome = "Kent",
                            Telefone = "33225555",
                            isAtivo = true
                        },
                        new
                        {
                            Id = 2,
                            DataInicio = new DateTime(2020, 5, 6, 18, 32, 22, 822, DateTimeKind.Local).AddTicks(8687),
                            DataNascimento = new DateTime(2005, 2, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Matricula = 2,
                            Nome = "Paula",
                            Sobrenome = "Isabela",
                            Telefone = "3354288",
                            isAtivo = true
                        },
                        new
                        {
                            Id = 3,
                            DataInicio = new DateTime(2020, 5, 6, 18, 32, 22, 822, DateTimeKind.Local).AddTicks(8736),
                            DataNascimento = new DateTime(2005, 3, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Matricula = 3,
                            Nome = "Laura",
                            Sobrenome = "Antonia",
                            Telefone = "55668899",
                            isAtivo = true
                        },
                        new
                        {
                            Id = 4,
                            DataInicio = new DateTime(2020, 5, 6, 18, 32, 22, 822, DateTimeKind.Local).AddTicks(8742),
                            DataNascimento = new DateTime(2005, 4, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Matricula = 4,
                            Nome = "Luiza",
                            Sobrenome = "Maria",
                            Telefone = "6565659",
                            isAtivo = true
                        },
                        new
                        {
                            Id = 5,
                            DataInicio = new DateTime(2020, 5, 6, 18, 32, 22, 822, DateTimeKind.Local).AddTicks(8747),
                            DataNascimento = new DateTime(2005, 5, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Matricula = 5,
                            Nome = "Lucas",
                            Sobrenome = "Machado",
                            Telefone = "565685415",
                            isAtivo = true
                        },
                        new
                        {
                            Id = 6,
                            DataInicio = new DateTime(2020, 5, 6, 18, 32, 22, 822, DateTimeKind.Local).AddTicks(8754),
                            DataNascimento = new DateTime(2005, 6, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Matricula = 6,
                            Nome = "Pedro",
                            Sobrenome = "Alvares",
                            Telefone = "456454545",
                            isAtivo = true
                        },
                        new
                        {
                            Id = 7,
                            DataInicio = new DateTime(2020, 5, 6, 18, 32, 22, 822, DateTimeKind.Local).AddTicks(8758),
                            DataNascimento = new DateTime(2005, 7, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Matricula = 7,
                            Nome = "Paulo",
                            Sobrenome = "José",
                            Telefone = "9874512",
                            isAtivo = true
                        });
                });

            modelBuilder.Entity("SmartSchollAPI.Models.AlunoCurso", b =>
                {
                    b.Property<int>("AlunoId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CursoId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("DataFim")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Datainicio")
                        .HasColumnType("TEXT");

                    b.HasKey("AlunoId", "CursoId");

                    b.HasIndex("CursoId");

                    b.ToTable("AlunosCursos");
                });

            modelBuilder.Entity("SmartSchollAPI.Models.AlunoDisciplina", b =>
                {
                    b.Property<int>("AlunoId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("DisciplinaId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("DataFim")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("TEXT");

                    b.Property<int?>("Nota")
                        .HasColumnType("INTEGER");

                    b.HasKey("AlunoId", "DisciplinaId");

                    b.HasIndex("DisciplinaId");

                    b.ToTable("AlunosDisciplinas");

                    b.HasData(
                        new
                        {
                            AlunoId = 1,
                            DisciplinaId = 2,
                            DataInicio = new DateTime(2020, 5, 6, 18, 32, 22, 822, DateTimeKind.Local).AddTicks(9789)
                        },
                        new
                        {
                            AlunoId = 1,
                            DisciplinaId = 4,
                            DataInicio = new DateTime(2020, 5, 6, 18, 32, 22, 823, DateTimeKind.Local).AddTicks(480)
                        },
                        new
                        {
                            AlunoId = 1,
                            DisciplinaId = 5,
                            DataInicio = new DateTime(2020, 5, 6, 18, 32, 22, 823, DateTimeKind.Local).AddTicks(505)
                        },
                        new
                        {
                            AlunoId = 2,
                            DisciplinaId = 1,
                            DataInicio = new DateTime(2020, 5, 6, 18, 32, 22, 823, DateTimeKind.Local).AddTicks(506)
                        },
                        new
                        {
                            AlunoId = 2,
                            DisciplinaId = 2,
                            DataInicio = new DateTime(2020, 5, 6, 18, 32, 22, 823, DateTimeKind.Local).AddTicks(507)
                        },
                        new
                        {
                            AlunoId = 2,
                            DisciplinaId = 5,
                            DataInicio = new DateTime(2020, 5, 6, 18, 32, 22, 823, DateTimeKind.Local).AddTicks(511)
                        },
                        new
                        {
                            AlunoId = 3,
                            DisciplinaId = 1,
                            DataInicio = new DateTime(2020, 5, 6, 18, 32, 22, 823, DateTimeKind.Local).AddTicks(512)
                        },
                        new
                        {
                            AlunoId = 3,
                            DisciplinaId = 2,
                            DataInicio = new DateTime(2020, 5, 6, 18, 32, 22, 823, DateTimeKind.Local).AddTicks(513)
                        },
                        new
                        {
                            AlunoId = 3,
                            DisciplinaId = 3,
                            DataInicio = new DateTime(2020, 5, 6, 18, 32, 22, 823, DateTimeKind.Local).AddTicks(514)
                        },
                        new
                        {
                            AlunoId = 4,
                            DisciplinaId = 1,
                            DataInicio = new DateTime(2020, 5, 6, 18, 32, 22, 823, DateTimeKind.Local).AddTicks(517)
                        },
                        new
                        {
                            AlunoId = 4,
                            DisciplinaId = 4,
                            DataInicio = new DateTime(2020, 5, 6, 18, 32, 22, 823, DateTimeKind.Local).AddTicks(518)
                        },
                        new
                        {
                            AlunoId = 4,
                            DisciplinaId = 5,
                            DataInicio = new DateTime(2020, 5, 6, 18, 32, 22, 823, DateTimeKind.Local).AddTicks(519)
                        },
                        new
                        {
                            AlunoId = 5,
                            DisciplinaId = 4,
                            DataInicio = new DateTime(2020, 5, 6, 18, 32, 22, 823, DateTimeKind.Local).AddTicks(520)
                        },
                        new
                        {
                            AlunoId = 5,
                            DisciplinaId = 5,
                            DataInicio = new DateTime(2020, 5, 6, 18, 32, 22, 823, DateTimeKind.Local).AddTicks(522)
                        },
                        new
                        {
                            AlunoId = 6,
                            DisciplinaId = 1,
                            DataInicio = new DateTime(2020, 5, 6, 18, 32, 22, 823, DateTimeKind.Local).AddTicks(523)
                        },
                        new
                        {
                            AlunoId = 6,
                            DisciplinaId = 2,
                            DataInicio = new DateTime(2020, 5, 6, 18, 32, 22, 823, DateTimeKind.Local).AddTicks(524)
                        },
                        new
                        {
                            AlunoId = 6,
                            DisciplinaId = 3,
                            DataInicio = new DateTime(2020, 5, 6, 18, 32, 22, 823, DateTimeKind.Local).AddTicks(525)
                        },
                        new
                        {
                            AlunoId = 6,
                            DisciplinaId = 4,
                            DataInicio = new DateTime(2020, 5, 6, 18, 32, 22, 823, DateTimeKind.Local).AddTicks(527)
                        },
                        new
                        {
                            AlunoId = 7,
                            DisciplinaId = 1,
                            DataInicio = new DateTime(2020, 5, 6, 18, 32, 22, 823, DateTimeKind.Local).AddTicks(528)
                        },
                        new
                        {
                            AlunoId = 7,
                            DisciplinaId = 2,
                            DataInicio = new DateTime(2020, 5, 6, 18, 32, 22, 823, DateTimeKind.Local).AddTicks(529)
                        },
                        new
                        {
                            AlunoId = 7,
                            DisciplinaId = 3,
                            DataInicio = new DateTime(2020, 5, 6, 18, 32, 22, 823, DateTimeKind.Local).AddTicks(531)
                        },
                        new
                        {
                            AlunoId = 7,
                            DisciplinaId = 4,
                            DataInicio = new DateTime(2020, 5, 6, 18, 32, 22, 823, DateTimeKind.Local).AddTicks(532)
                        },
                        new
                        {
                            AlunoId = 7,
                            DisciplinaId = 5,
                            DataInicio = new DateTime(2020, 5, 6, 18, 32, 22, 823, DateTimeKind.Local).AddTicks(533)
                        });
                });

            modelBuilder.Entity("SmartSchollAPI.Models.Curso", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Cursos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "Tecnologia da Informação"
                        },
                        new
                        {
                            Id = 2,
                            Nome = "Sistemas de Informação"
                        },
                        new
                        {
                            Id = 3,
                            Nome = "Ciência da Computação"
                        });
                });

            modelBuilder.Entity("SmartSchollAPI.Models.Disciplina", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CargaHoraria")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CursoId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .HasColumnType("TEXT");

                    b.Property<int?>("PreRequisitoId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ProfessorId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CursoId");

                    b.HasIndex("PreRequisitoId");

                    b.HasIndex("ProfessorId");

                    b.ToTable("Disciplinas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CargaHoraria = 0,
                            CursoId = 1,
                            Nome = "Matemática",
                            ProfessorId = 1
                        },
                        new
                        {
                            Id = 2,
                            CargaHoraria = 0,
                            CursoId = 3,
                            Nome = "Matemática",
                            ProfessorId = 1
                        },
                        new
                        {
                            Id = 3,
                            CargaHoraria = 0,
                            CursoId = 3,
                            Nome = "Física",
                            ProfessorId = 2
                        },
                        new
                        {
                            Id = 4,
                            CargaHoraria = 0,
                            CursoId = 1,
                            Nome = "Português",
                            ProfessorId = 3
                        },
                        new
                        {
                            Id = 5,
                            CargaHoraria = 0,
                            CursoId = 1,
                            Nome = "Inglês",
                            ProfessorId = 4
                        },
                        new
                        {
                            Id = 6,
                            CargaHoraria = 0,
                            CursoId = 2,
                            Nome = "Inglês",
                            ProfessorId = 4
                        },
                        new
                        {
                            Id = 7,
                            CargaHoraria = 0,
                            CursoId = 3,
                            Nome = "Inglês",
                            ProfessorId = 4
                        },
                        new
                        {
                            Id = 8,
                            CargaHoraria = 0,
                            CursoId = 1,
                            Nome = "Programação",
                            ProfessorId = 5
                        },
                        new
                        {
                            Id = 9,
                            CargaHoraria = 0,
                            CursoId = 2,
                            Nome = "Programação",
                            ProfessorId = 5
                        },
                        new
                        {
                            Id = 10,
                            CargaHoraria = 0,
                            CursoId = 3,
                            Nome = "Programação",
                            ProfessorId = 5
                        });
                });

            modelBuilder.Entity("SmartSchollAPI.Models.Professor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("DataFim")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .HasColumnType("TEXT");

                    b.Property<int>("Registro")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Sobrenome")
                        .HasColumnType("TEXT");

                    b.Property<bool>("isAtivo")
                        .HasColumnType("INTEGER");

                    b.Property<string>("telefone")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Professores");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DataInicio = new DateTime(2020, 5, 6, 18, 32, 22, 818, DateTimeKind.Local).AddTicks(4884),
                            Nome = "Lauro",
                            Registro = 1,
                            Sobrenome = "Oliveira",
                            isAtivo = true
                        },
                        new
                        {
                            Id = 2,
                            DataInicio = new DateTime(2020, 5, 6, 18, 32, 22, 819, DateTimeKind.Local).AddTicks(3886),
                            Nome = "Roberto",
                            Registro = 2,
                            Sobrenome = "Soares",
                            isAtivo = true
                        },
                        new
                        {
                            Id = 3,
                            DataInicio = new DateTime(2020, 5, 6, 18, 32, 22, 819, DateTimeKind.Local).AddTicks(4074),
                            Nome = "Ronaldo",
                            Registro = 3,
                            Sobrenome = "Marconi",
                            isAtivo = true
                        },
                        new
                        {
                            Id = 4,
                            DataInicio = new DateTime(2020, 5, 6, 18, 32, 22, 819, DateTimeKind.Local).AddTicks(4077),
                            Nome = "Rodrigo",
                            Registro = 4,
                            Sobrenome = "Carvalho",
                            isAtivo = true
                        },
                        new
                        {
                            Id = 5,
                            DataInicio = new DateTime(2020, 5, 6, 18, 32, 22, 819, DateTimeKind.Local).AddTicks(4078),
                            Nome = "Alexandre",
                            Registro = 5,
                            Sobrenome = "Montanha",
                            isAtivo = true
                        });
                });

            modelBuilder.Entity("SmartSchollAPI.Models.AlunoCurso", b =>
                {
                    b.HasOne("SmartSchollAPI.Models.Aluno", "Aluno")
                        .WithMany()
                        .HasForeignKey("AlunoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SmartSchollAPI.Models.Curso", "Curso")
                        .WithMany()
                        .HasForeignKey("CursoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SmartSchollAPI.Models.AlunoDisciplina", b =>
                {
                    b.HasOne("SmartSchollAPI.Models.Aluno", "Aluno")
                        .WithMany("AlunosDiciplinas")
                        .HasForeignKey("AlunoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SmartSchollAPI.Models.Disciplina", "Disciplina")
                        .WithMany("AlunosDiciplinas")
                        .HasForeignKey("DisciplinaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SmartSchollAPI.Models.Disciplina", b =>
                {
                    b.HasOne("SmartSchollAPI.Models.Curso", "Curso")
                        .WithMany("Disciplinas")
                        .HasForeignKey("CursoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SmartSchollAPI.Models.Disciplina", "PreRequisito")
                        .WithMany()
                        .HasForeignKey("PreRequisitoId");

                    b.HasOne("SmartSchollAPI.Models.Professor", "Professor")
                        .WithMany("Disciplinas")
                        .HasForeignKey("ProfessorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
